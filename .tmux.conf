#basic setting
unbind-key c-b
set-option -g prefix c-a
set -g mouse on
set -g default-terminal "xterm-256color"

set-option -g history-limit 4096
set-window-option -g mode-keys vi
#set -g utf8 on 


#pane/windows control 
bind c new-window -c "#{pane_current_path}"
bind-key | split-window -h
bind-key _ split-window -v
#bind '"' split-window -c "#{pane_current_path}"
#bind % split-window -h -c "#{pane_current_path}"
#resize #bind-key J resize-pane -D 5 #bind-key K resize-pane -U 5 #bind-key H resize-pane -L 5 #bind-key L resize-pane -R 5


#pane navigation
bind-key -n 'C-Left' select-pane -L
bind-key -n 'C-Down' select-pane -D
bind-key -n 'C-Up' select-pane -U
bind-key -n 'C-Right' select-pane -R
bind-key -n 'C-\' select-pane -l

bind-key -n 'C-Tab' next-window
bind-key -n 'C-S-Tab' previous-window

#pane move: as bind {, } # https://itectec.com/superuser/tmux-keybinding-to-swap-pane-left-or-right/
bind-key -n 'M-Left'  select-pane -L \; swap-pane -s '!' \; select-pane -L 
bind-key -n 'M-Up'    select-pane -U \; swap-pane -s '!' \; select-pane -U
bind-key -n 'M-Right' select-pane -R \; swap-pane -s '!' \; select-pane -R 
bind-key -n 'M-Down'  select-pane -D \; swap-pane -s '!' \; select-pane -D 


#new window n was next-window
bind-key n split-window -v \; select-pane -U \; break-pane


#copy mode #https://github.com/gotbletu/dotfiles_v2/blob/master/normal_user/tmux/.tmux.conf
bind-key Escape copy-mode	# default key: prefix [
bind-key p paste-buffer		# default key: prefix ] ; interactively clipboard history key: prefix = 
bind-key v capture-pane \; save-buffer ~/.config/tmux-buffer \; new-window -n "vim-copymode" '$SHELL -c "vim ~/.config/tmux-buffer"'
#bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "copy to tmux clipboard"
#bind-key > run-shell 'tmux show-buffer | xsel -i -b' \; display-message "copy to system clipboard"

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
#bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy | xclip -in -selection clipboard"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'


#vim check #https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L' #bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
#bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U' #bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'


#style status bar 
set -g status-style bg='#44475a',fg='#bd93f9'
set -g status-left '#[bg=#f8f8f2]#[fg=#282a36]#{?client_prefix,#[bg=#ff79c6],}C-a'
#set -ga status-left '#[bg=#44475a]#[fg=#ff79c6] #{?window_zoomed_flag, â†• ,}'
set -ga status-left '#[bg=#44475a]#[fg=#ff79c6]#{?window_zoomed_flag,#[bg=#ff79c6]#[fg=#44475a],} z '

#set -g window-status-format " #I: #W "
#set -g window-status-current-format " #I: #W "
set -g window-status-current-style fg=black,bg=green

#set-window-option -g window-status-current-bg red
set -g status-right "%Y-%m-%d %H:%M:%S"
set -g status-interval 1

#https://stackoverflow.com/questions/21490249/when-scrolling-my-tmux-automatically-scroll-down
#https://dev.to/mjswensen/configurations-for-a-friendlier-tmux-status-bar-32n3 
#https://github.com/tmux/tmux/wiki/FAQ#how-do-i-translate--fg--bg-and--attr-options-into--style-options
#https://cassidy.codes/blog/2019-08-03-tmux-colour-theme/
#set -g status-left-fg black
#set -g status-left-bg white
#set -g status-style fg=white,bg=black
#set -g status-left-style fg=white,bg=black
#set -g status-right-style fg=white,bg=black


#MOUSE mode
bind-key m set-option -g -q mouse on \; display-message 'Mouse: ON'
bind-key M set-option -g -q mouse off \; display-message 'Mouse: OFF'

# not working 
# Toggle mouse on with ^B m https://tangledhelix.com/blog/2012/07/16/tmux-and-mouse-mode/
